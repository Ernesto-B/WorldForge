name: CI Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      SONAR_SCANNER_OPTS: "-Xmx512m"

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Python Setup
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Cache pip Dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt')}}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Dependencies
        working-directory: ./backend
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install -r requirements.txt

      - name: Lint Using flake8
        working-directory: ./backend
        run: |
          source .venv/bin/activate
          flake8 app/ --count --select=E9,F63,F7,F82 --show-source --statistics

      - name: Run Tests with Coverage
        working-directory: ./backend
        if: ${{ github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository }}
        run: |
          source .venv/bin/activate
          pytest --cov=app --cov-report=xml --junitxml=tests/reports/results.xml

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: backend/reports/coverage.xml

      - name: Upload Pytest JUnit Results
        uses: actions/upload-artifact@v4
        with:
          name: junit-results
          path: backend/reports/results.xml

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          projectKey: Ernesto-B_WorldForge
          organization: ernesto-b
          args: >
            -Dsonar.sources=/backend
            -Dsonar.python.coverage.reportPaths=coverage.xml
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}


      - name: Bandit Security Scan
        working-directory: ./backend
        run: |
          source .venv/bin/activate
          bandit -r app -f xml -o bandit-report.xml || true

      - name: Upload Bandit Report
        uses: actions/upload-artifact@v4
        with:
          name: bandit:report
          path: backend/reports/bandit-report.xml

      - name: Run JMeter Performance Test (If Available)
        if: ${{ github.event_name != 'pull_request' && hashFiles('backend/tests/load_tests.jmx') != ''}}
        run: |
          source .venv/bin/activate
          sudo apt-get update
          sudo apt-get install -y jmeter
          jmeter -n -t backend/tests/load_tests.jmx -l results.jtl

      - name: Upload JMeter Results
        if: ${{ github.event_name != 'pull_request' && hashFiles('backend/tests/load_tests.jmx') != ''}}
        uses: actions/upload-artifact@v4
        with:
          name: jmeter-results
          path: backend/reports/results.jtl



